@model List<YoneticiOtomasyonu.Models.WorkTask>

    @{
    ViewData["Title"] = "Görevlerim";
    }

    <div class="container py-5">
        <div class="d-flex justify-content-between align-items-center mb-5">
            <div>
                <h1 class="fw-bold text-primary mb-1">Görevlerim</h1>
                <p class="text-muted">Atanmış tüm görevlerinizin listesi</p>
            </div>
            <div class="d-flex align-items-center">
                <span class="badge bg-primary rounded-pill me-2 fs-6">@Model.Count görev</span>
                <button class="btn btn-outline-primary" data-bs-toggle="modal" data-bs-target="#filterModal">
                    <i class="fas fa-filter me-1"></i>Filtrele
                </button>
            </div>
        </div>

        @if (!Model.Any())
    {
        <div class="text-center py-5 my-5">
            <div class="mb-4">
                <i class="fas fa-clipboard-list text-muted" style="font-size: 5rem;"></i>
            </div>
            <h3 class="fw-bold text-muted mb-3">Henüz görev atanmamış</h3>
            <p class="text-muted mb-4">Size atanmış herhangi bir görev bulunmuyor.</p>
            <a href="#" class="btn btn-outline-primary px-4">
                <i class="fas fa-sync-alt me-2"></i>Yenile
            </a>
        </div>
    }
    else
    {
        <div class="row g-4">
            @foreach (var task in Model)
            {
            <div class="col-12 col-md-6 col-lg-4 col-xl-3">
                <div class="card h-100 border-0 shadow-sm rounded-3 overflow-hidden task-card">
                    <div class="card-header py-3" style="background-color: @GetStatusColor(task.Status, true);">
                        <div class="d-flex justify-content-between align-items-center">
                            <span class="badge @GetPriorityBadgeClass(task.Priority)">@task.Priority</span>
                            <span class="text-white small">@task.CreatedAt.ToString("dd.MM.yyyy")</span>
                        </div>
                    </div>
                    <div class="card-body d-flex flex-column">
                        <div class="mb-3">
                            <h5 class="card-title fw-bold mb-2 text-truncate" title="@task.Title">@task.Title</h5>
                            <p class="card-text text-muted mb-3 line-clamp-2" title="@task.Description">
                                @if (!string.IsNullOrEmpty(task.Description))
                                    {
                                @task.Description
                                    }
                                    else
                                    {
                                <span class="text-muted fst-italic">Açıklama yok</span>
                                    }
                            </p>
                        </div>

                        <div class="mt-auto">
                            <div class="d-flex justify-content-between align-items-center mb-3">
                                <span class="badge rounded-pill @GetStatusBadgeClass(task.Status)">
                                    @task.Status
                                </span>
                                @if (task.Complaint != null)
                                    {
                                <span class="badge bg-info bg-opacity-10 text-info">
                                    <i class="fas fa-exclamation-circle me-1"></i>Şikayet
                                </span>
                                    }
                            </div>

                            <a asp-controller="WorkTask" asp-action="Detail" asp-route-id="@task.Id"
                               class="btn btn-primary w-100 py-2 d-flex align-items-center justify-content-center">
                                <i class="fas fa-arrow-right me-2"></i>Detaylı Görüntüle
                            </a>
                        </div>
                    </div>
                </div>
            </div>
            }
        </div>
    }
    </div>

    <!-- Filtreleme Modal -->
    <!-- Güncellenmiş Filtreleme Modal -->
    <div class="modal fade" id="filterModal" tabindex="-1" aria-labelledby="filterModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="filterModalLabel">Görev Filtreleme</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <form asp-controller="WorkTask" asp-action="FilterTasks" method="get">
                    <div class="modal-body">
                        <div class="mb-3">
                            <label class="form-label">Durum</label>
                            <select class="form-select" name="status">
                                <option value="">Tüm durumlar</option>
                                <option value="Yeni">Yeni</option>
                                <option value="Devam Ediyor">Devam Ediyor</option>
                                <option value="Tamamlandı">Tamamlandı</option>
                                <option value="İptal Edildi">İptal Edildi</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Öncelik</label>
                            <select class="form-select" name="priority">
                                <option value="">Tüm öncelikler</option>
                                <option value="Yüksek">Yüksek</option>
                                <option value="Orta">Orta</option>
                                <option value="Düşük">Düşük</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Başlangıç Tarihi</label>
                            <input type="date" class="form-control" name="startDate">
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Bitiş Tarihi</label>
                            <input type="date" class="form-control" name="endDate">
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-outline-secondary" data-bs-dismiss="modal">İptal</button>
                        <button type="submit" class="btn btn-primary">Filtrele</button>
                    </div>
                </form>
            </div>
        </div>
    </div>

    @functions {
    string GetPriorityBadgeClass(string priority)
    {
        switch (priority?.ToLower())
        {
            case "yüksek": return "bg-danger";
            case "orta": return "bg-warning text-dark";
            case "düşük": return "bg-success";
            default: return "bg-secondary";
        }
    }

    string GetStatusBadgeClass(string status)
    {
        switch (status?.ToLower())
        {
            case "yeni": return "bg-info bg-opacity-10 text-info";
            case "devam ediyor": return "bg-warning bg-opacity-10 text-warning";
            case "tamamlandı": return "bg-success bg-opacity-10 text-success";
            case "iptal edildi": return "bg-danger bg-opacity-10 text-danger";
            default: return "bg-secondary bg-opacity-10 text-secondary";
        }
    }

    string GetStatusColor(string status, bool asHex = false)
    {
        switch (status?.ToLower())
        {
            case "yeni": return asHex ? "#0dcaf0" : "info";
            case "devam ediyor": return asHex ? "#ffc107" : "warning";
            case "tamamlandı": return asHex ? "#198754" : "success";
            case "iptal edildi": return asHex ? "#dc3545" : "danger";
            default: return asHex ? "#6c757d" : "secondary";
        }
    }
    }

    @section Styles {
        <style>
            .task-card {
                transition: transform 0.2s, box-shadow 0.2s;
            }

                .task-card:hover {
                    transform: translateY(-5px);
                    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
                }

            .line-clamp-2 {
                display: -webkit-box;
                -webkit-line-clamp: 2;
                -webkit-box-orient: vertical;
                overflow: hidden;
            }

            .card-header {
                border-bottom: none;
            }
        </style>
    }
